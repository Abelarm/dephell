
# Default section.
# Convert dephell metainfo and dependencies from poetry to setup.py:
# $ dephell deps convert
[tool.dephell.main]
# read from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# and convert into setup.py
to = {format = "setuppy", path = "setup.py"}

# explicitly specify your versioning scheme to let your users know what they can expect
versioning = "semver"

# Make lockfile
# $ dephell deps convert --env=lock
[tool.dephell.lock]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetrylock", path = "poetry.lock"}

# Install flake8 with plugin in the separated venv and run it:
# $ dephell venv create --env=flake8
# $ dephell deps install --env=flake8
# $ dephell venv run --env=flake8
[tool.dephell.flake8]
# read requirements file
from = {format = "pip", path = "requirements-flake.txt"}
# run this command
command = "flake8"

[tool.dephell.typing]
from = {format = "poetry", path = "pyproject.toml"}
# mypy isn't specified in dependencies,
# but `dephell venv run` command will install it automatically
command = "mypy --ignore-missing-imports --allow-redefinition dephell"

# Test project package in the separated venv:
# $ dephell project test --env=pytest
[tool.dephell.pytest]
# read dependencies from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# copy files that requred for tests
tests = ["tests", "README.md"]
# run command `pytest`
command = "pytest -x tests/"

# Install `docs` extra dependencies  in the separated venv and run sphinx:
# $ dephell venv create --env=docs
# $ dephell deps install --env=docs
# $ dephell venv run --env=docs
[tool.dephell.docs]
# read dependencies from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# install only `docs` extra dependencies
envs = ["docs"]
# run this command:
command = "sphinx-build -M html docs docs/build"

[tool.poetry]
name = "dephell"
version = "0.3.2"
authors = ["Gram <master_fess@mail.ru>"]
description = "Dependency resolution for Python"
readme = "README.md"
license = "MIT"
repository = "https://github.com/dephell/dephell"
keywords = [
    "dephell", "packaging", "dependency", "dependencies", "venv", "licenses",
    "pip", "poetry", "pipfile", "pipenv", "setuptools",
]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Setuptools Plugin",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Security",  # because we lock dependencies with hashes :)
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.scripts]
dephell = "dephell.cli:entrypoint"

[tool.poetry.dependencies]
python = ">=3.5"
aiohttp = "*"
appdirs = "*"
attrs = "*"
cerberus = "*"
jinja2 = "*"
m2r = "*"
packaging = "*"
pip = ">=18.0"
requests = "*"
tomlkit = "*"
yaspin = "*"

# optional
aiofiles = {optional = true}
autopep8 = {optional = true}
colorama = {optional = true}
graphviz = {optional = true}
yapf = {optional = true}

# dephell ecosystem
dephell-archive = "*"
dephell-discover = "*"
dephell-licenses = "*"
dephell-links = "*"
dephell-markers = "*"
dephell-pythons = "*"
dephell-shells = "*"
dephell-specifier = "*"
dephell-venvs = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
sphinx = "*"
recommonmark = "*"
sphinx-rtd-theme = "*"
pygments-github-lexers = "*"

[tool.poetry.extras]
full = ["aiofiles", "autopep8", "colorama", "graphviz", "yapf"]
tests = ["pytest"]
docs = ["pygments-github-lexers", "recommonmark", "sphinx", "sphinx-rtd-theme"]
